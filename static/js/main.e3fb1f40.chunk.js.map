{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/ActionButton.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","actions/techActions.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","respnse","style","marginBottom","className","id","placeholder","onChange","e","target","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","ActionButton","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","checked","newLog","Date","current","updateLog","addTech","firstName","setFirstName","lastName","setLastName","deleteTech","getTechs","techs","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3fb1f40.chunk.js","sourcesContent":["import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from './types';\r\n// get logs from the db\r\nexport const getLogs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_LOGS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// Search server logs\r\nexport const searchLogs = (text) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/logs?q=${text}`);\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: SEARCH_LOGS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// add new log\r\nexport const addLog = (log) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch('/logs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(log),\r\n            headers: {'Content-Type': 'application/json'\r\n        }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_LOG,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// delete Log\r\nexport const deleteLog = (id) => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        await fetch(`/logs/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_LOG,\r\n            payload: id,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// Set Current Log\r\nexport const setCurrent = log => {\r\n    return {\r\n        type: SET_CURRENT,\r\n        payload: log\r\n    }\r\n}\r\n\r\n//Clear Current Log\r\nexport const clearCurrent = () => {\r\n    return {\r\n        type: CLEAR_CURRENT\r\n    }\r\n}\r\n\r\nexport const updateLog = log => async dispatch => {\r\n    try {\r\n        setLoading();\r\n\r\n        const res = await fetch(`/logs/${log.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(log),\r\n            headers: {\r\n                'Content-Type' : 'application/json'\r\n            }\r\n        });\r\n\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: UPDATE_LOG,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: LOGS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n}\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    }\r\n};","export const GET_LOGS = 'GET_LOGS';\r\nexport const ADD_LOG = 'ADD_LOG';\r\nexport const DELETE_LOG = 'DELETE_LOG';\r\nexport const SET_CURRENT = 'SET_CURRENT';\r\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\r\nexport const UPDATE_LOG = 'UPDATE_LOG';\r\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const LOGS_ERROR = 'LOGS_ERROR';\r\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\r\nexport const GET_TECHS = 'GET_TECHS';\r\nexport const ADD_TECH = 'ADD_TECH';\r\nexport const DELETE_TECH = 'DELETE_TECH';\r\nexport const TECHS_ERROR = 'TECHS_ERROR';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { searchLogs } from '../../actions/logActions';\r\n\r\nconst SearchBar = ({searchLogs}) => {\r\n\r\n    return (\r\n        <nav style={{ marginBottom: '30px'}} className=\"blue\">\r\n            <div className=\"nav-wrapper\">\r\n            <form>\r\n                <div className=\"input-field\">\r\n                <input \r\n                    id=\"search\" \r\n                    placeholder=\"Search Logs...\" type=\"search\" \r\n                    onChange={e => searchLogs(e.target.value)} \r\n                />\r\n                <label className=\"label-icon\" htmlFor=\"search\"><i className=\"material-icons\">search</i></label>\r\n                <i className=\"material-icons\">close</i>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default connect(null, {searchLogs})(SearchBar);\r\n","import React from 'react'\r\nimport Moment from 'react-moment';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteLog, setCurrent } from '../../actions/logActions';\r\nimport M from 'materialize-css/dist/js/materialize.min.js'\r\n\r\n\r\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\r\n\r\n    const onDelete = () => {\r\n        deleteLog(log.id);\r\n        M.toast({ html: 'Log Deleted'})\r\n    }\r\n\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <a \r\n                href=\"#edit-log-modal\"\r\n                className={`modal-trigger ${log.attention ? 'red-text': 'blue-text'}`}\r\n                onClick={() => setCurrent(log)}\r\n            >\r\n                {log.message}\r\n            </a>\r\n            <br/>\r\n            <span className=\"grey-text\">\r\n                <span className=\"black-text\">ID #{log.id} </span>\r\n                last updated by \r\n                <span className=\"black-text\"> {log.tech} </span> on <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\r\n            </span>\r\n            <a href=\"#!\" className=\"secondary-content\">\r\n                <i onClick={onDelete} className=\"material-icons grey-text\">delete</i>\r\n            </a> \r\n        </li>\r\n    )\r\n}\r\n\r\nLogItem.propTypes = {\r\n    log: PropTypes.object.isRequired,\r\n    deleteLog: PropTypes.func.isRequired,\r\n    setCurrent: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteLog, setCurrent})(LogItem);\r\n","import React from 'react'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"progress blue lighter-4\">\r\n            <div className=\"indeterminate blue\"></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React, {useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogItem from './LogItem';\r\nimport Preloader from '../layout/Preloader';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogs } from '../../actions/logActions';\r\n\r\nconst Logs = ({ log: {logs, loading}, getLogs}) => {\r\n\r\n    useEffect(() => {\r\n        getLogs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    if(loading || logs === null) {\r\n        return (\r\n            <Preloader />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className=\"collection with-header\">\r\n            <li className=\"collection-header\">\r\n                <h4 className=\"center\">System Logs</h4>\r\n            </li>\r\n            {!loading && logs.length === 0 ? (<p className=\"\r\n            center\">No logs to show...</p>) : (logs.map(log => <LogItem log={log}/>))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nLogs.propTypes = { \r\n    log: PropTypes.object.isRequired, \r\n    getLogs: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getLogs})(Logs);\r\n","import React from 'react'\r\n\r\nconst ActionButton = () => {\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n            <a \r\n                href=\"#add-log-modal\"\r\n                className=\"btn-floating btn-large blue darken-2 modal-trigger\">\r\n                <i className=\"large material-icons\">add</i>\r\n            </a>\r\n            <ul>\r\n                <li><a href=\"#add-tech-modal\" className=\"btn-floating green  modal-trigger\"><i className=\"material-icons\">person_add</i></a></li>\r\n                <li><a href=\"#tech-list-modal\" className=\"btn-floating orange  modal-trigger\"><i className=\"material-icons\">person</i></a></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActionButton\r\n","import React, {useState} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addLog } from '../../actions/logActions';\r\n\r\nconst AddLogModal = ({ addLog }) => {\r\n    const [message, setMessage] = useState(\"\");\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState(\"John Doe\");\r\n\r\n    const onSubmit = () => {\r\n        if(message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n        } else {\r\n            const newLog = {\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date(),\r\n            }\r\n\r\n            addLog(newLog);\r\n\r\n            M.toast({ html: `Log added by ${tech}`});\r\n\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Enter System Log</h4>\r\n                <div className=\"row\">\r\n                \r\n                    <div className=\"input-field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"message\" \r\n                            value={message} \r\n                            onChange={e=> setMessage(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"message\" className=\"active\">Log Message</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select \r\n                            name=\"tech\" \r\n                            value={tech} \r\n                            className=\"browser-default\" \r\n                            onChange={e => setTech(e.target.value)}\r\n                        >\r\n                            <option value=\"John Doe\">John Doe</option>\r\n                            <option value=\"Sam Smith\">Sam Smith</option>\r\n                            <option value=\"Mary Joe\">ZMary Joe</option>\r\n                            <option value=\"Peter Phanouvong\">Peter Phanouvong</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n}\r\n\r\nAddLogModal.propTypes = { \r\n    log: PropTypes.object.isRequired,\r\n    addLog: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    log: state.log\r\n});\r\n\r\nexport default connect(mapStateToProps, {addLog})(AddLogModal);\r\n","import React, {useState, useEffect} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { updateLog } from '../../actions/logActions';\r\n\r\nconst EditLogModal = ({ current, updateLog }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [attention, setAttention] = useState(false);\r\n    const [tech, setTech] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (current) {\r\n            setMessage(current.message);\r\n            setAttention(current.attention);\r\n            setTech(current.tech);\r\n        }\r\n    }, [current]);\r\n\r\n    const onSubmit = () => {\r\n        if(message === '' || tech === '') {\r\n            M.toast({ html: 'Please enter a message and tech' });\r\n        } else {\r\n            const newLog = {\r\n                id: current.id,\r\n                message,\r\n                attention,\r\n                tech,\r\n                date: new Date()\r\n            }\r\n\r\n            updateLog(newLog);\r\n            M.toast({html : `Log updated by ${tech}`})\r\n\r\n            setMessage('');\r\n            setTech('');\r\n            setAttention(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\r\n            <div className=\"modal-content\">\r\n                <h4>Edit Log</h4>\r\n                <div className=\"row\">\r\n                \r\n                    <div className=\"input-field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"message\" \r\n                            value={message} \r\n                            onChange={e=> setMessage(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <select \r\n                            name=\"tech\" \r\n                            value={tech} \r\n                            className=\"browser-default\" \r\n                            onChange={e => setTech(e.target.value)}\r\n                        >\r\n                            <option value=\"John Doe\">John Doe</option>\r\n                            <option value=\"Sam Smith\">Sam Smith</option>\r\n                            <option value=\"Mary Joe\">ZMary Joe</option>\r\n                            <option value=\"Peter Phanouvong\">Peter Phanouvong</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <p>\r\n                            <label>\r\n                                <input type=\"checkbox\" className=\"filled-in\" checked={attention} value={attention} onChange={e => setAttention(!attention)}/>\r\n                                <span>Needs Attention</span>\r\n                            </label>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst modalStyle = {\r\n    width: '75%',\r\n    height: '75%'\r\n}\r\n\r\nEditLogModal.propTypes = {\r\n    current: PropTypes.object,\r\n    updateLog: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    current: state.log.current\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateLog})(EditLogModal);\r\n","import { GET_TECHS, ADD_TECH, DELETE_TECH, TECHS_ERROR, SET_LOADING } from './types';\r\n// get techs from the db\r\nexport const getTechs = () => async dispatch => {\r\n    try {\r\n        setLoading();\r\n        const res = await fetch('/techs');\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: GET_TECHS,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// add new log\r\nexport const addTech = (tech) => async dispatch => {\r\n    try {\r\n        const res = await fetch('/techs', {\r\n            method: 'POST',\r\n            body: JSON.stringify(tech),\r\n            headers: {'Content-Type': 'application/json'\r\n        }\r\n        });\r\n        const data = await res.json();\r\n\r\n        dispatch({\r\n            type: ADD_TECH,\r\n            payload: data,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// delete Tecg\r\nexport const deleteTech = (id) => async dispatch => {\r\n    try {\r\n        await fetch(`/techs/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n\r\n        dispatch({\r\n            type: DELETE_TECH,\r\n            payload: id,\r\n        });\r\n\r\n    } catch (err) {\r\n        dispatch({\r\n            type: TECHS_ERROR,\r\n            payload: err.respnse.data\r\n        })\r\n    } \r\n};\r\n\r\n// Set loading to true\r\nexport const setLoading = () => {\r\n    return {\r\n        type: SET_LOADING\r\n    }\r\n};","import React, {useState} from 'react'\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\nimport { connect } from 'react-redux';\r\nimport { addTech } from '../../actions/techActions';\r\n\r\nconst AddTechModal = ({ addTech }) => {\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        if(firstName === '' || lastName === '') {\r\n            M.toast({ html: 'Please enter a firstname and lastname' });\r\n        } else {\r\n            const newTech = {\r\n                firstName,\r\n                lastName\r\n            }\r\n\r\n            addTech(newTech);\r\n            M.toast({ html : `New Tech: \"${firstName} ${lastName}\" has been added!`})\r\n            setFirstName('');\r\n            setLastName('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"add-tech-modal\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h4>Add a Technician</h4>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"firstName\" \r\n                            value={firstName} \r\n                            onChange={e=> setFirstName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"firstName\" className=\"active\">First Name</label>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className=\"row\">\r\n                    <div className=\"input-field\">\r\n                        <input \r\n                            type=\"text\" \r\n                            name=\"lastName\" \r\n                            value={lastName} \r\n                            onChange={e=> setLastName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"lastName\" className=\"active\">Last Name</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <a href=\"#!\" onClick={onSubmit} className=\"modal-close waves-effect blue btn\">Enter</a>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect(null, {addTech})(AddTechModal)\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { deleteTech } from '../../actions/techActions';\r\nimport {connect} from 'react-redux';\r\nimport M from 'materialize-css/dist/js/materialize.min.js';\r\n\r\nconst TechItem = ({ tech, deleteTech }) => {\r\n    const onDelete = () => {\r\n        deleteTech(tech.id);\r\n        M.toast({html : `${tech.firstName} ${tech.lastName} has been deleted.`})\r\n    }\r\n\r\n    return (\r\n        <li className=\"collection-item\">\r\n            <div>\r\n                {tech.firstName} {tech.lastName}\r\n                <a href=\"#!\" className=\"secondary-content\">\r\n                    <i onClick={onDelete}className=\"material-icons grey-text\">delete</i>\r\n                </a>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nTechItem.propTypes = {\r\n    tech: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default connect(null, {deleteTech})(TechItem)\r\n","import React, {useEffect, useState} from 'react';\r\nimport TechItem from './TechItem';\r\nimport {connect} from 'react-redux';\r\nimport { getTechs } from '../../actions/techActions';\r\n\r\nconst TechListModal = ({tech: {loading, techs}, getTechs}) => {\r\n    useEffect(() => {\r\n        getTechs();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"tech-list-modal\" className=\"modal\">\r\n            <div className=\"modal-content\">\r\n                <h4>Technician List</h4>\r\n                <ul className=\"collection\">\r\n                    {!loading && techs.map(tech => (\r\n                        <TechItem tech={tech} />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tech: state.tech\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTechs})(TechListModal)\r\n","import { GET_LOGS, SET_LOADING, LOGS_ERROR, ADD_LOG, DELETE_LOG, SET_CURRENT, CLEAR_CURRENT, UPDATE_LOG, SEARCH_LOGS } from '../actions/types';\r\n\r\nconst initialState = {  \r\n    logs: null,\r\n    current: null,\r\n    loading: false,\r\n    error: null\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case GET_LOGS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                logs: action.payload,\r\n            }\r\n        case SEARCH_LOGS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                logs: action.payload,\r\n            }\r\n        case ADD_LOG:\r\n            return {\r\n                ...state, \r\n                loading: false,\r\n                logs: [...state.logs, action.payload]\r\n            }\r\n        case DELETE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.filter(log => log.id !== action.payload),\r\n                loading: false,\r\n            } \r\n        case LOGS_ERROR:\r\n            console.error(action.payload)\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case SET_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: action.payload\r\n            }\r\n        case CLEAR_CURRENT:\r\n            return {\r\n                ...state,\r\n                current: null\r\n            }\r\n        case UPDATE_LOG:\r\n            return {\r\n                ...state,\r\n                logs: state.logs.map(log => log.id === action.payload.id ? action.payload: log)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_TECHS, ADD_TECH, DELETE_TECH, TECHS_ERROR, SET_LOADING } from '../actions/types';\r\n\r\nconst initialState = {\r\n    techs: [],\r\n    error: null,\r\n    loading: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_TECHS:\r\n            return {\r\n                ...state,\r\n                techs: action.payload,\r\n                loading: false\r\n            }\r\n        case ADD_TECH:\r\n            return {\r\n                ...state,\r\n                techs: [...state.techs, action.payload],\r\n                loading: false\r\n            }\r\n        case DELETE_TECH:\r\n            return {\r\n                ...state,\r\n                techs: state.techs.filter(tech => tech.id !== action.payload),\r\n                loading: false\r\n            }\r\n        case TECHS_ERROR:\r\n            console.error(action.payload)\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n        case SET_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport logReducer from './logReducer';\r\nimport techReducer from './techReducer';\r\n\r\nexport default combineReducers({\r\n    log: logReducer,\r\n    tech: techReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;","import React, {useEffect, Fragment} from 'react';\n\nimport SearchBar from './components/layout/SearchBar';\nimport Logs from './components/logs/Logs';\nimport ActionButton from './components/layout/ActionButton';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport './App.css';\n\n\nconst App = () => {\n  useEffect(()=> {\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className=\"container\">\n          <ActionButton />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}